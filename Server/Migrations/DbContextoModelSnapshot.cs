// <auto-generated />
using System;
using BFS_SisControl.Server.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BFS_SisControl.Server.Migrations
{
    [DbContext(typeof(DbContexto))]
    partial class DbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("BFS_SisControl.Shared.TbPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TbPessoas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Este Aqui",
                            CEP = "29.200-001",
                            Cidade = "Guarapari",
                            Complemento = "Apto 001",
                            Cpf = "111.111.111-11",
                            DataAtualizacao = new DateTime(2023, 6, 18, 0, 30, 11, 870, DateTimeKind.Local).AddTicks(337),
                            DataCadastro = new DateTime(2023, 6, 18, 0, 30, 11, 870, DateTimeKind.Local).AddTicks(328),
                            DataNascimento = new DateTime(1972, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Teste@teste.com",
                            Endereco = "Rua da minha casa, 001",
                            Fone = "(27) 99999-1234",
                            Nome = "Primeira Pessoa Cadastrada",
                            UF = "ES"
                        },
                        new
                        {
                            Id = 2,
                            Bairro = "Este Aqui",
                            CEP = "29.200-002",
                            Cidade = "Guarapari",
                            Complemento = "Apto 002",
                            Cpf = "222.222.222-22",
                            DataAtualizacao = new DateTime(2023, 6, 18, 0, 30, 11, 870, DateTimeKind.Local).AddTicks(421),
                            DataCadastro = new DateTime(2023, 6, 18, 0, 30, 11, 870, DateTimeKind.Local).AddTicks(421),
                            DataNascimento = new DateTime(1974, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Teste@teste.com",
                            Endereco = "Rua da minha casa, 002",
                            Fone = "(27) 99999-2345",
                            Nome = "Segunda Pessoa Cadastrada",
                            UF = "ES"
                        },
                        new
                        {
                            Id = 3,
                            Bairro = "Este Aqui",
                            CEP = "29.200-003",
                            Cidade = "Guarapari",
                            Complemento = "Apto 003",
                            Cpf = "333.333.333-33",
                            DataAtualizacao = new DateTime(2023, 6, 18, 0, 30, 11, 870, DateTimeKind.Local).AddTicks(430),
                            DataCadastro = new DateTime(2023, 6, 18, 0, 30, 11, 870, DateTimeKind.Local).AddTicks(429),
                            DataNascimento = new DateTime(1997, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Teste@teste.com",
                            Endereco = "Rua da minha casa, 003",
                            Fone = "(27) 99999-3456",
                            Nome = "Terceira Pessoa Cadastrada",
                            UF = "ES"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
